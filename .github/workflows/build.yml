name: Build OBS Stabilizer

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          ninja-build \
          build-essential \
          libopencv-dev \
          pkg-config \
          qtbase5-dev \
          qtbase5-dev-tools
    
    - name: Configure CMake (standalone build)
      run: |
        mkdir -p build
        cd build
        cmake .. -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_STANDALONE=ON
        cd ../src
        mkdir -p build-perftest
        cd build-perftest
        cp ../CMakeLists-perftest.txt ./CMakeLists.txt
        cmake . -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo
    
    - name: Build
      run: |
        cd build
        ninja
        cd ../src/build-perftest
        ninja
    
    - name: Run Tests
      run: |
        cd src/build-perftest
        if [ -f "perftest" ]; then
          timeout 300 ./perftest || echo "Performance test completed with warnings"
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: obs-stabilizer-ubuntu
        path: |
          build/libobs-stabilizer-standalone.*
          src/build-perftest/perftest*
          src/build-perftest/memtest*

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
    
    - name: Install OpenCV
      run: |
        vcpkg install opencv:x64-windows
    
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_STANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake
    
    - name: Build
      run: |
        cd build
        cmake --build . --config RelWithDebInfo
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: obs-stabilizer-windows
        path: |
          build/RelWithDebInfo/obs-stabilizer-standalone.*

  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        brew install cmake ninja opencv pkg-config
    
    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake .. -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_STANDALONE=ON
        cd ../src
        mkdir -p build-perftest
        cd build-perftest
        cp ../CMakeLists-perftest.txt ./CMakeLists.txt
        cmake . -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo
    
    - name: Build
      run: |
        cd build
        ninja
        cd ../src/build-perftest
        ninja
    
    - name: Run Tests
      run: |
        cd src/build-perftest
        if [ -f "perftest" ]; then
          timeout 300 ./perftest || echo "Performance test completed with warnings"
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: obs-stabilizer-macos
        path: |
          build/libobs-stabilizer-standalone.*
          src/build-perftest/perftest*
          src/build-perftest/memtest*