Checking src/core/error_handler.cpp ...
src/core/logging_adapter.hpp:22:0: warning: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #include <cstdio>
^
src/core/logging_adapter.hpp:23:0: warning: Include file: <cstdarg> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #include <cstdarg>
^
src/core/config_macros.hpp:14:0: warning: Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <type_traits>
^
src/core/error_handler.hpp:14:0: warning: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/core/error_handler.hpp:15:0: warning: Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <functional>
^
src/core/error_handler.hpp:53:39: warning: Return value 'OpenCVGuard::execute_or([func=std::forward<Func>(func),&result,category,operation_name]()->bool{try{result=func();return true;}catch(const std::exception&e){handle_standard_error(e,category,operation_name);return false;}catch(...){log_critical_error(category,operation_name,"Unknown exception caught");return false;}},[operation_name]()->bool{log_stub_mode_warning(operation_name);return false;}())' is always false [knownConditionTrueFalse]
        return OpenCVGuard::execute_or([func = std::forward<Func>(func), &result, category, operation_name]() -> bool {
                                      ^
src/core/error_handler.hpp:73:10: note: Calling function '[' returns 0
        }());
         ^
src/core/error_handler.hpp:53:39: note: Calling function 'execute_or' returns 0
        return OpenCVGuard::execute_or([func = std::forward<Func>(func), &result, category, operation_name]() -> bool {
                                      ^
src/core/error_handler.hpp:53:39: note: Return value 'OpenCVGuard::execute_or([func=std::forward<Func>(func),&result,category,operation_name]()->bool{try{result=func();return true;}catch(const std::exception&e){handle_standard_error(e,category,operation_name);return false;}catch(...){log_critical_error(category,operation_name,"Unknown exception caught");return false;}},[operation_name]()->bool{log_stub_mode_warning(operation_name);return false;}())' is always false
        return OpenCVGuard::execute_or([func = std::forward<Func>(func), &result, category, operation_name]() -> bool {
                                      ^
src/core/error_handler.hpp:94:39: warning: Return value 'OpenCVGuard::execute_or([func=std::forward<Func>(func),category,operation_name]()->bool{try{return func();}catch(const std::exception&e){handle_standard_error(e,category,operation_name);return false;}catch(...){log_critical_error(category,operation_name,"Unknown exception caught");return false;}},[operation_name]()->bool{log_stub_mode_warning(operation_name);return false;}())' is always false [knownConditionTrueFalse]
        return OpenCVGuard::execute_or([func = std::forward<Func>(func), category, operation_name]() -> bool {
                                      ^
src/core/error_handler.hpp:113:10: note: Calling function '[' returns 0
        }());
         ^
src/core/error_handler.hpp:94:39: note: Calling function 'execute_or' returns 0
        return OpenCVGuard::execute_or([func = std::forward<Func>(func), category, operation_name]() -> bool {
                                      ^
src/core/error_handler.hpp:94:39: note: Return value 'OpenCVGuard::execute_or([func=std::forward<Func>(func),category,operation_name]()->bool{try{return func();}catch(const std::exception&e){handle_standard_error(e,category,operation_name);return false;}catch(...){log_critical_error(category,operation_name,"Unknown exception caught");return false;}},[operation_name]()->bool{log_stub_mode_warning(operation_name);return false;}())' is always false
        return OpenCVGuard::execute_or([func = std::forward<Func>(func), category, operation_name]() -> bool {
                                      ^
src/core/error_handler.hpp:22:0: warning: Include file: <opencv2/opencv.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/opencv.hpp>
^
Checking src/core/error_handler.cpp: ENABLE_STABILIZATION...
src/core/logging_adapter.hpp:15:0: warning: Include file: <obs-module.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #include <obs-module.h>
^
src/core/error_handler.hpp:18:0: warning: Include file: <obs-module.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <obs-module.h>
^
Checking src/core/error_handler.cpp: HAVE_OBS_HEADERS...
Checking src/core/error_handler.cpp: _MSC_VER...
Checking src/core/error_handler.cpp: __GNUC__;__clang__...
1/15 files checked 2% done
Checking src/core/parameter_validator.cpp ...
src/core/frame_adapter.hpp:13:0: warning: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
src/core/parameter_validator.hpp:15:0: warning: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
src/core/parameter_validator.hpp:16:0: warning: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/core/stabilizer_constants.hpp:13:0: warning: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
src/core/parameter_validator.cpp:13:0: warning: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
src/core/parameter_validator.cpp:14:0: warning: Include file: <climits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <climits>
^
src/core/parameter_validator.cpp:0:0: warning: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src/core/parameter_validator.hpp:72:24: warning: Unused private function: 'ParameterValidator::get_format_name' [unusedPrivateFunction]
    static const char* get_format_name(uint32_t format);
                       ^
src/core/parameter_validator.hpp:30:5: warning: Struct 'ValidationResult' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    ValidationResult(bool valid) : is_valid(valid) {}
    ^
src/core/parameter_validator.cpp:18:68: warning: Parameter 'frame' can be declared as pointer to const [constParameterPointer]
ValidationResult ParameterValidator::validate_frame_basic(frame_t* frame) {
                                                                   ^
src/core/parameter_validator.hpp:19:0: warning: Include file: <opencv2/opencv.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/opencv.hpp>
^
Checking src/core/parameter_validator.cpp: ENABLE_STABILIZATION...
src/core/frame_adapter.hpp:17:0: warning: Include file: <obs-module.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #include <obs-module.h>
^
Checking src/core/parameter_validator.cpp: HAVE_OBS_HEADERS...
2/15 files checked 8% done
Checking src/core/stabilizer_core.cpp ...
src/core/transform_matrix.hpp:13:0: warning: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/core/transform_matrix.hpp:14:0: warning: Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <array>
^
src/core/transform_matrix.hpp:15:0: warning: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/core/transform_matrix.hpp:16:0: warning: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
src/core/transform_matrix.hpp:17:0: warning: Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <mutex>
^
src/core/stabilizer_core.hpp:21:0: warning: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/core/stabilizer_core.hpp:22:0: warning: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/core/stabilizer_core.hpp:23:0: warning: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
src/core/stabilizer_core.hpp:24:0: warning: Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <mutex>
^
src/core/stabilizer_core.cpp:18:0: warning: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
src/core/stabilizer_core.cpp:19:0: warning: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/core/transform_matrix.hpp:20:0: warning: Include file: <opencv2/opencv.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/opencv.hpp>
^
src/core/stabilizer_core.hpp:16:0: warning: Include file: <opencv2/opencv.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/opencv.hpp>
^
src/core/stabilizer_core.hpp:17:0: warning: Include file: <opencv2/features2d.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/features2d.hpp>
^
src/core/stabilizer_core.hpp:18:0: warning: Include file: <opencv2/video/tracking.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/video/tracking.hpp>
^
src/core/opencv_raii.hpp:14:0: warning: Include file: <opencv2/opencv.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/opencv.hpp>
^
src/core/opencv_raii.hpp:15:0: warning: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
Checking src/core/stabilizer_core.cpp: ENABLE_STABILIZATION...
src/core/stabilizer_core.cpp:26:5: warning: Variable 'status_' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    status_ = StabilizerStatus::INACTIVE;
    ^
Checking src/core/stabilizer_core.cpp: HAVE_OBS_HEADERS...
Checking src/core/stabilizer_core.cpp: _MSC_VER...
Checking src/core/stabilizer_core.cpp: __GNUC__;__clang__...
3/15 files checked 18% done
Checking src/core/stabilizer_core_debug.cpp ...
src/core/stabilizer_core_debug.cpp:13:0: warning: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
src/core/stabilizer_core_debug.cpp:14:0: warning: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/core/stabilizer_core_debug.cpp:15:0: warning: Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <mutex>
^
src/core/stabilizer_core_debug.cpp:16:0: warning: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
Checking src/core/stabilizer_core_debug.cpp: ENABLE_STABILIZATION...
Checking src/core/stabilizer_core_debug.cpp: HAVE_OBS_HEADERS...
4/15 files checked 20% done
Checking src/core/transform_matrix.cpp ...
src/core/transform_matrix.cpp:13:0: warning: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
src/core/transform_matrix.cpp:14:0: warning: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/core/transform_matrix.cpp:15:0: warning: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
src/core/transform_matrix.cpp:16:0: warning: Include file: <numeric> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <numeric>
^
src/core/transform_matrix.hpp:90:27: warning: Function 'get_raw_data()' should return member 'fallback_data_' by const reference. [returnByReference]
    std::array<double, 6> get_raw_data() const; // [a, b, c, d, tx, ty] for 2x3 affine
                          ^
src/core/transform_matrix.cpp:127:5: warning: Consider using std::all_of or std::none_of algorithm instead of a raw loop. [useStlAlgorithm]
    for (double val : fallback_data_) {
    ^
src/core/transform_matrix.cpp:403:17: warning: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
            val /= count;
                ^
Checking src/core/transform_matrix.cpp: ENABLE_STABILIZATION...
src/core/transform_matrix.cpp:307:57: warning: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
                if (std::isnan(val) || std::isinf(val)) {
                                                        ^
Checking src/core/transform_matrix.cpp: HAVE_OBS_HEADERS...
Checking src/core/transform_matrix.cpp: _MSC_VER...
Checking src/core/transform_matrix.cpp: __GNUC__;__clang__...
5/15 files checked 28% done
Checking src/memory-test.cpp ...
src/memory-test.cpp:6:0: warning: Include file: <opencv2/opencv.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/opencv.hpp>
^
src/memory-test.cpp:7:0: warning: Include file: <opencv2/features2d.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/features2d.hpp>
^
src/memory-test.cpp:8:0: warning: Include file: <opencv2/video/tracking.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/video/tracking.hpp>
^
src/memory-test.cpp:9:0: warning: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
src/memory-test.cpp:10:0: warning: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/memory-test.cpp:11:0: warning: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
src/memory-test.cpp:12:0: warning: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
src/memory-test.cpp:13:0: warning: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
src/memory-test.cpp:0:0: warning: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src/memory-test.cpp:82:9: warning: Variable 'accumulated_transform' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
        accumulated_transform = cv::Mat::eye(2, 3, CV_64F);
        ^
src/memory-test.cpp:80:5: warning: Class 'StabilizationMemoryTest' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    StabilizationMemoryTest(int smoothing = 30, int features = 200)
    ^
src/memory-test.cpp:108:38: warning: The scope of the variable 'current_points' can be reduced. [variableScope]
            std::vector<cv::Point2f> current_points;
                                     ^
src/memory-test.cpp:109:32: warning: The scope of the variable 'status' can be reduced. [variableScope]
            std::vector<uchar> status;
                               ^
src/memory-test.cpp:110:32: warning: The scope of the variable 'errors' can be reduced. [variableScope]
            std::vector<float> errors;
                               ^
src/memory-test.cpp:148:38: warning: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
                            smoothed += hist_transform;
                                     ^
src/memory-test.cpp:21:0: warning: Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <windows.h>
^
src/memory-test.cpp:22:0: warning: Include file: <psapi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <psapi.h>
^
Checking src/memory-test.cpp: _WIN32...
src/memory-test.cpp:16:0: warning: Include file: <mach/mach.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <mach/mach.h>
^
Checking src/memory-test.cpp: __APPLE__...
src/memory-test.cpp:18:0: warning: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
src/memory-test.cpp:19:0: warning: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
Checking src/memory-test.cpp: __linux__...
6/15 files checked 35% done
Checking src/obs/obs_integration.cpp ...
src/obs/obs_integration.hpp:13:0: warning: Include file: <obs-module.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <obs-module.h>
^
src/obs/obs_integration.cpp:16:0: warning: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/obs/obs_integration.cpp:17:0: warning: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/obs/obs_integration.cpp:18:0: warning: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
src/obs/obs_integration.cpp:0:0: warning: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src/obs/obs_integration.cpp:79:5: warning: Variable 'stabilizer_core' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    stabilizer_core = std::make_unique<StabilizerCore>();
    ^
src/obs/obs_integration.cpp:82:5: warning: Variable 'config' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    config = StabilizerConfig{};
    ^
src/obs/obs_integration.cpp:54:13: warning: Condition '!core_ptr' is always false [knownConditionTrueFalse]
        if (!core_ptr) {
            ^
src/obs/obs_integration.cpp:288:27: warning: Variable 'filter' can be declared as pointer to const [constVariablePointer]
        StabilizerFilter* filter = static_cast<StabilizerFilter*>(data);
                          ^
src/obs/obs_integration.cpp:429:72: warning: Parameter 'frame' can be declared as pointer to const [constParameterPointer]
void OBSIntegration::apply_transform_to_frame(struct obs_source_frame* frame, const TransformMatrix& transform) {
                                                                       ^
src/obs/obs_integration.hpp:17:0: warning: Include file: <opencv2/opencv.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/opencv.hpp>
^
Checking src/obs/obs_integration.cpp: ENABLE_STABILIZATION...
src/obs/obs_integration.hpp:72:17: warning: Unused private function: 'OBSIntegration::apply_transform_generic' [unusedPrivateFunction]
    static void apply_transform_generic(struct obs_source_frame* frame,
                ^
Checking src/obs/obs_integration.cpp: HAVE_OBS_HEADERS...
Checking src/obs/obs_integration.cpp: _MSC_VER...
Checking src/obs/obs_integration.cpp: __GNUC__;__clang__...
7/15 files checked 51% done
Checking src/obs_module_exports.c ...
src/plugin-support.h:25:0: warning: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
src/plugin-support.h:26:0: warning: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
src/plugin-support.h:27:0: warning: Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdarg.h>
^
src/plugin-support.h:28:0: warning: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
src/obs_module_exports.c:14:0: warning: Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdbool.h>
^
src/obs_module_exports.c:10:0: warning: Include file: <obs-module.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <obs-module.h>
^
Checking src/obs_module_exports.c: HAVE_OBS_HEADERS...
8/15 files checked 53% done
Checking src/obs_stubs.c ...
src/obs_stubs.c:11:0: warning: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
src/obs_stubs.c:12:0: warning: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
src/obs_stubs.c:13:0: warning: Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdarg.h>
^
src/obs_stubs.c:14:0: warning: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
src/obs_stubs.c:15:0: warning: Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdbool.h>
^
src/obs_stubs.c:16:0: warning: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src/obs_stubs.c:17:0: warning: Include file: <ctype.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ctype.h>
^
include/obs/obs-module.h:7:0: warning: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
include/obs/obs-module.h:8:0: warning: Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdbool.h>
^
include/obs/obs-module.h:121:0: warning: Include file: <stddef.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stddef.h>
^
src/obs_stubs.c:0:0: warning: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src/obs_stubs.c:121:50: warning: Parameter 'info' can be declared as pointer to const [constParameterPointer]
bool obs_register_source(struct obs_source_info *info) {
                                                 ^
src/obs_stubs.c:139:36: warning: Parameter 'data' can be declared as pointer to const [constParameterPointer]
bool obs_data_get_bool(obs_data_t *data, const char *name) {
                                   ^
src/obs_stubs.c:150:34: warning: Parameter 'data' can be declared as pointer to const [constParameterPointer]
int obs_data_get_int(obs_data_t *data, const char *name) {
                                 ^
src/obs_stubs.c:164:40: warning: Parameter 'data' can be declared as pointer to const [constParameterPointer]
double obs_data_get_double(obs_data_t *data, const char *name) {
                                       ^
src/obs_stubs.c:174:45: warning: Parameter 'data' can be declared as pointer to const [constParameterPointer]
const char *obs_data_get_string(obs_data_t *data, const char *name) {
                                            ^
src/obs_stubs.c:180:44: warning: Parameter 'data' can be declared as pointer to const [constParameterPointer]
void obs_data_set_default_bool(obs_data_t *data, const char *name, bool val) {
                                           ^
src/obs_stubs.c:186:43: warning: Parameter 'data' can be declared as pointer to const [constParameterPointer]
void obs_data_set_default_int(obs_data_t *data, const char *name, int val) {
                                          ^
src/obs_stubs.c:192:46: warning: Parameter 'data' can be declared as pointer to const [constParameterPointer]
void obs_data_set_default_double(obs_data_t *data, const char *name, double val) {
                                             ^
src/obs_stubs.c:198:46: warning: Parameter 'data' can be declared as pointer to const [constParameterPointer]
void obs_data_set_default_string(obs_data_t *data, const char *name, const char *val) {
                                             ^
src/obs_stubs.c:218:59: warning: Parameter 'props' can be declared as pointer to const [constParameterPointer]
obs_property_t *obs_properties_add_bool(obs_properties_t *props, const char *name, const char *description) {
                                                          ^
src/obs_stubs.c:225:58: warning: Parameter 'props' can be declared as pointer to const [constParameterPointer]
obs_property_t *obs_properties_add_int(obs_properties_t *props, const char *name, const char *description, int min, int max, int step) {
                                                         ^
src/obs_stubs.c:232:65: warning: Parameter 'props' can be declared as pointer to const [constParameterPointer]
obs_property_t *obs_properties_add_int_slider(obs_properties_t *props, const char *name, const char *description, int min, int max, int step) {
                                                                ^
src/obs_stubs.c:239:67: warning: Parameter 'props' can be declared as pointer to const [constParameterPointer]
obs_property_t *obs_properties_add_float_slider(obs_properties_t *props, const char *name, const char *description, double min, double max, double step) {
                                                                  ^
src/obs_stubs.c:246:59: warning: Parameter 'props' can be declared as pointer to const [constParameterPointer]
obs_property_t *obs_properties_add_list(obs_properties_t *props, const char *name, const char *description, enum obs_combo_type type, enum obs_combo_format format) {
                                                          ^
src/obs_stubs.c:253:63: warning: Parameter 'props' can be declared as pointer to const [constParameterPointer]
obs_property_t *obs_properties_create_group(obs_properties_t *props, const char *name, const char *description, enum obs_group_type type) {
                                                              ^
src/obs_stubs.c:260:50: warning: Parameter 'prop' can be declared as pointer to const [constParameterPointer]
size_t obs_property_list_add_int(obs_property_t *prop, const char *name, int val) {
                                                 ^
src/obs_stubs.c:266:53: warning: Parameter 'prop' can be declared as pointer to const [constParameterPointer]
size_t obs_property_list_add_string(obs_property_t *prop, const char *name, const char *val) {
                                                    ^
src/obs_stubs.c:272:56: warning: Parameter 'prop' can be declared as pointer to const [constParameterPointer]
void obs_property_set_long_description(obs_property_t *prop, const char *long_description) {
                                                       ^
Checking src/obs_stubs.c: _WIN32...
9/15 files checked 58% done
Checking src/performance-test.cpp ...
src/performance-test.cpp:6:0: warning: Include file: <opencv2/opencv.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/opencv.hpp>
^
src/performance-test.cpp:7:0: warning: Include file: <opencv2/features2d.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/features2d.hpp>
^
src/performance-test.cpp:8:0: warning: Include file: <opencv2/video/tracking.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/video/tracking.hpp>
^
src/performance-test.cpp:9:0: warning: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
src/performance-test.cpp:10:0: warning: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/performance-test.cpp:11:0: warning: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
src/performance-test.cpp:12:0: warning: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
src/performance-test.cpp:0:0: warning: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src/performance-test.cpp:33:9: warning: Variable 'accumulated_transform' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
        accumulated_transform = cv::Mat::eye(2, 3, CV_64F);
        ^
src/performance-test.cpp:31:5: warning: Class 'StabilizationProfiler' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    StabilizationProfiler(int smoothing = 30, int features = 200)
    ^
src/performance-test.cpp:69:38: warning: The scope of the variable 'current_points' can be reduced. [variableScope]
            std::vector<cv::Point2f> current_points;
                                     ^
src/performance-test.cpp:70:32: warning: The scope of the variable 'status' can be reduced. [variableScope]
            std::vector<uchar> status;
                               ^
src/performance-test.cpp:71:32: warning: The scope of the variable 'errors' can be reduced. [variableScope]
            std::vector<float> errors;
                               ^
src/performance-test.cpp:109:38: warning: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
                            smoothed += hist_transform;
                                     ^
src/performance-test.cpp:253:29: warning: Variable 'time' is assigned a value that is never used. [unreadVariable]
                double time = profiler.processFrame(frame);
                            ^
10/15 files checked 66% done
Checking src/plugin-main.cpp ...
src/plugin-main.cpp:16:0: warning: Include file: <plugin-support.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <plugin-support.h>
^
src/plugin-main.cpp:19:0: warning: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
src/plugin-main.cpp:24:0: warning: Include file: <opencv2/opencv.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/opencv.hpp>
^
src/plugin-main.cpp:12:0: warning: Include file: <obs-module.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <obs-module.h>
^
Checking src/plugin-main.cpp: HAVE_OBS_HEADERS...
11/15 files checked 68% done
Checking src/plugin-support.c ...
src/plugin-support.c:20:0: warning: Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdbool.h>
^
src/plugin-support.c:21:0: warning: Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdarg.h>
^
src/plugin-support.c:22:0: warning: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
src/plugin-support.c:23:0: warning: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
src/plugin-support.c:26:0: warning: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
src/plugin-support.c:0:0: warning: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
Checking src/plugin-support.c: HAVE_OBS_HEADERS...
12/15 files checked 69% done
Checking src/tests/test_exception_safety.cpp ...
src/tests/test_exception_safety.cpp:9:0: warning: Include file: <gtest/gtest.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <gtest/gtest.h>
^
src/tests/test_exception_safety.cpp:10:0: warning: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
src/tests/test_exception_safety.cpp:11:0: warning: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/tests/test_exception_safety.cpp:12:0: warning: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
src/tests/test_exception_safety.cpp:13:0: warning: Include file: <signal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <signal.h>
^
src/tests/test_exception_safety.cpp:14:0: warning: Include file: <setjmp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <setjmp.h>
^
src/tests/test_exception_safety.cpp:320:9: warning: Variable 'test_array' can be declared as const array [constVariable]
    int test_array[10];
        ^
src/tests/test_exception_safety.cpp:323:9: warning: Uninitialized variable: test_array [uninitvar]
        test_array, 15, 10, "test_array"); // Index 15 > max_size 10
        ^
src/tests/test_exception_safety.cpp:118:26: warning: struct member 'FakeStabilizerFilter::config' is never used. [unusedStructMember]
        StabilizerConfig config;
                         ^
src/tests/test_exception_safety.cpp:152:26: warning: struct member 'FakeStabilizerFilter::config' is never used. [unusedStructMember]
        StabilizerConfig config;
                         ^
src/tests/test_exception_safety.cpp:210:15: warning: struct member 'FakeStabilizerFilter::source' is never used. [unusedStructMember]
        void* source;
              ^
src/tests/test_exception_safety.cpp:211:14: warning: struct member 'FakeStabilizerFilter::enabled' is never used. [unusedStructMember]
        bool enabled;
             ^
src/tests/test_exception_safety.cpp:213:26: warning: struct member 'FakeStabilizerFilter::config' is never used. [unusedStructMember]
        StabilizerConfig config;
                         ^
src/tests/test_exception_safety.cpp:258:27: warning: Variable 'caught_exception' is assigned a value that is never used. [unreadVariable]
    bool caught_exception = false;
                          ^
src/tests/test_exception_safety.cpp:23:0: warning: Include file: <opencv2/opencv.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <opencv2/opencv.hpp>
^
Checking src/tests/test_exception_safety.cpp: ENABLE_STABILIZATION...
src/tests/test_exception_safety.cpp:174:29: warning: Variable 'bad_config.max_features' is assigned a value that is never used. [unreadVariable]
    bad_config.max_features = -1; // Invalid value that might cause OpenCV error
                            ^
src/tests/test_exception_safety.cpp:175:33: warning: Variable 'bad_config.smoothing_radius' is assigned a value that is never used. [unreadVariable]
    bad_config.smoothing_radius = -1; // Invalid value
                                ^
Checking src/tests/test_exception_safety.cpp: HAVE_OBS_HEADERS...
Checking src/tests/test_exception_safety.cpp: _MSC_VER...
Checking src/tests/test_exception_safety.cpp: __GNUC__;__clang__...
13/15 files checked 78% done
Checking src/tests/test_exception_safety_complete.cpp ...
src/tests/test_exception_safety_complete.cpp:9:0: warning: Include file: <gtest/gtest.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <gtest/gtest.h>
^
src/tests/test_exception_safety_complete.cpp:10:0: warning: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
src/tests/test_exception_safety_complete.cpp:11:0: warning: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/tests/test_exception_safety_complete.cpp:12:0: warning: Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <thread>
^
src/tests/test_exception_safety_complete.cpp:13:0: warning: Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <atomic>
^
src/tests/test_exception_safety_complete.cpp:14:0: warning: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
src/tests/test_exception_safety_complete.cpp:0:0: warning: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src/obs/obs_integration.cpp:109:22: warning: Condition 'preset_value>=0' is always true [knownConditionTrueFalse]
    if (preset_value >= 0 && preset_value <= 3) {
                     ^
src/obs/obs_integration.cpp:108:45: note: Calling function 'obs_data_get_int' returns 30
    int preset_value = (int)obs_data_get_int(settings, "preset_mode");
                                            ^
src/obs/obs_integration.cpp:108:24: note: Assignment 'preset_value=(int)obs_data_get_int(settings,"preset_mode")', assigned value is 30
    int preset_value = (int)obs_data_get_int(settings, "preset_mode");
                       ^
src/obs/obs_integration.cpp:109:22: note: Condition 'preset_value>=0' is always true
    if (preset_value >= 0 && preset_value <= 3) {
                     ^
src/obs/obs_integration.cpp:109:43: warning: Condition 'preset_value<=3' is always false [knownConditionTrueFalse]
    if (preset_value >= 0 && preset_value <= 3) {
                                          ^
src/obs/obs_integration.cpp:108:45: note: Calling function 'obs_data_get_int' returns 30
    int preset_value = (int)obs_data_get_int(settings, "preset_mode");
                                            ^
src/obs/obs_integration.cpp:108:24: note: Assignment 'preset_value=(int)obs_data_get_int(settings,"preset_mode")', assigned value is 30
    int preset_value = (int)obs_data_get_int(settings, "preset_mode");
                       ^
src/obs/obs_integration.cpp:109:43: note: Condition 'preset_value<=3' is always false
    if (preset_value >= 0 && preset_value <= 3) {
                                          ^
src/obs/obs_integration.cpp:118:22: warning: Condition 'output_value>=0' is always true [knownConditionTrueFalse]
    if (output_value >= 0 && output_value <= 2) {
                     ^
src/obs/obs_integration.cpp:117:45: note: Calling function 'obs_data_get_int' returns 30
    int output_value = (int)obs_data_get_int(settings, "output_mode");
                                            ^
src/obs/obs_integration.cpp:117:24: note: Assignment 'output_value=(int)obs_data_get_int(settings,"output_mode")', assigned value is 30
    int output_value = (int)obs_data_get_int(settings, "output_mode");
                       ^
src/obs/obs_integration.cpp:118:22: note: Condition 'output_value>=0' is always true
    if (output_value >= 0 && output_value <= 2) {
                     ^
src/obs/obs_integration.cpp:118:43: warning: Condition 'output_value<=2' is always false [knownConditionTrueFalse]
    if (output_value >= 0 && output_value <= 2) {
                                          ^
src/obs/obs_integration.cpp:117:45: note: Calling function 'obs_data_get_int' returns 30
    int output_value = (int)obs_data_get_int(settings, "output_mode");
                                            ^
src/obs/obs_integration.cpp:117:24: note: Assignment 'output_value=(int)obs_data_get_int(settings,"output_mode")', assigned value is 30
    int output_value = (int)obs_data_get_int(settings, "output_mode");
                       ^
src/obs/obs_integration.cpp:118:43: note: Condition 'output_value<=2' is always false
    if (output_value >= 0 && output_value <= 2) {
                                          ^
src/obs/obs_integration.cpp:137:13: warning: Condition 'enabled' is always true [knownConditionTrueFalse]
            enabled ? "true" : "false", config.smoothing_radius, config.max_features, config.error_threshold);
            ^
src/obs/obs_integration.cpp:93:32: note: Calling function 'obs_data_get_bool' returns 1
    enabled = obs_data_get_bool(settings, "enable_stabilization");
                               ^
src/obs/obs_integration.cpp:93:32: note: Assignment 'enabled=obs_data_get_bool(settings,"enable_stabilization")', assigned value is 1
    enabled = obs_data_get_bool(settings, "enable_stabilization");
                               ^
src/obs/obs_integration.cpp:137:13: note: Condition 'enabled' is always true
            enabled ? "true" : "false", config.smoothing_radius, config.max_features, config.error_threshold);
            ^
src/tests/test_exception_safety_complete.cpp:278:26: warning: struct member 'CorruptedFilter::config' is never used. [unusedStructMember]
        StabilizerConfig config;
                         ^
Checking src/tests/test_exception_safety_complete.cpp: ENABLE_STABILIZATION...
src/obs/obs_integration.cpp:432:20: warning: Uninitialized variable: frame->format [uninitvar]
    switch (frame->format) {
                   ^
src/tests/test_exception_safety_complete.cpp:479:62: note: Calling function 'apply_transform_to_frame', 1st argument '&null_data_frame' value is <Uninit>
    EXPECT_NO_THROW(OBSIntegration::apply_transform_to_frame(&null_data_frame, valid_transform))
                                                             ^
src/obs/obs_integration.cpp:432:20: note: Uninitialized variable: frame->format
    switch (frame->format) {
                   ^
Checking src/tests/test_exception_safety_complete.cpp: HAVE_OBS_HEADERS...
Checking src/tests/test_exception_safety_complete.cpp: _MSC_VER...
Checking src/tests/test_exception_safety_complete.cpp: __GNUC__;__clang__...
14/15 files checked 90% done
Checking src/tests/test_exception_safety_isolated.cpp ...
src/tests/test_exception_safety_isolated.cpp:10:0: warning: Include file: <gtest/gtest.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <gtest/gtest.h>
^
src/tests/test_exception_safety_isolated.cpp:11:0: warning: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
src/tests/test_exception_safety_isolated.cpp:12:0: warning: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/tests/test_exception_safety_isolated.cpp:13:0: warning: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
src/tests/test_exception_safety_isolated.cpp:0:0: warning: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src/tests/test_exception_safety_isolated.cpp:39:9: warning: Variable 'stabilizer_core' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
        stabilizer_core = std::make_unique<StabilizerCore>();
        ^
src/tests/test_exception_safety_isolated.cpp:70:13: warning: Condition '!core_ptr' is always false [knownConditionTrueFalse]
        if (!core_ptr) {
            ^
src/tests/test_exception_safety_isolated.cpp:181:26: warning: struct member 'FakeStabilizerFilter::config' is never used. [unusedStructMember]
        StabilizerConfig config;
                         ^
15/15 files checked 100% done
src/core/config_macros.hpp:165:0: warning: The function 'is_opencv_available' is never used. [unusedFunction]
    inline bool is_opencv_available() {
^
src/core/config_macros.hpp:169:0: warning: The function 'are_features_available' is never used. [unusedFunction]
    inline bool are_features_available() {
^
src/core/config_macros.hpp:174:0: warning: The function 'get_feature_description' is never used. [unusedFunction]
    inline const char* get_feature_description() {
^
src/core/opencv_raii.hpp:97:0: warning: The function 'make_points_guard' is never used. [unusedFunction]
inline CVPointsGuard make_points_guard(std::vector<cv::Point2f>&& points) {
^
src/core/parameter_validator.cpp:190:0: warning: The function 'validate_smoothing_radius' is never used. [unusedFunction]
ValidationResult ParameterValidator::validate_smoothing_radius(int radius) {
^
src/core/parameter_validator.cpp:195:0: warning: The function 'validate_feature_count' is never used. [unusedFunction]
ValidationResult ParameterValidator::validate_feature_count(int count) {
^
src/core/parameter_validator.cpp:200:0: warning: The function 'validate_threshold_value' is never used. [unusedFunction]
ValidationResult ParameterValidator::validate_threshold_value(double threshold, double min_val, double max_val, const char* param_name) {
^
src/core/parameter_validator.cpp:204:0: warning: The function 'validate_positive_integer' is never used. [unusedFunction]
ValidationResult ParameterValidator::validate_positive_integer(int value, const char* param_name) {
^
src/core/parameter_validator.cpp:279:0: warning: The function 'get_format_name' is never used. [unusedFunction]
const char* ParameterValidator::get_format_name(uint32_t format) {
^
src/core/stabilizer_core.hpp:190:0: warning: The function 'get_status' is never used. [unusedFunction]
    StabilizerStatus get_status() const { return StabilizerStatus::INACTIVE; }
^
src/core/stabilizer_core.hpp:191:0: warning: The function 'get_metrics' is never used. [unusedFunction]
    StabilizerMetrics get_metrics() const { return StabilizerMetrics{}; }
^
src/core/transform_matrix.cpp:99:0: warning: The function 'get_opencv_ref' is never used. [unusedFunction]
const cv::Mat& TransformMatrix::get_opencv_ref() const {
^
src/core/transform_matrix.cpp:106:0: warning: The function 'has_opencv_data' is never used. [unusedFunction]
bool TransformMatrix::has_opencv_data() const {
^
src/core/transform_matrix.cpp:111:0: warning: The function 'is_identity' is never used. [unusedFunction]
bool TransformMatrix::is_identity() const {
^
src/core/transform_matrix.cpp:262:0: warning: The function 'to_string' is never used. [unusedFunction]
std::string TransformMatrix::to_string() const {
^
src/core/transform_matrix.cpp:343:0: warning: The function 'create_translation' is never used. [unusedFunction]
TransformMatrix create_translation(double dx, double dy) {
^
src/core/transform_matrix.cpp:349:0: warning: The function 'create_scale' is never used. [unusedFunction]
TransformMatrix create_scale(double scale) {
^
src/core/transform_matrix.cpp:355:0: warning: The function 'create_rotation' is never used. [unusedFunction]
TransformMatrix create_rotation(double radians) {
^
src/core/transform_matrix.cpp:365:0: warning: The function 'is_transform_reasonable' is never used. [unusedFunction]
bool is_transform_reasonable(const TransformMatrix& transform) {
^
src/core/transform_matrix.cpp:369:0: warning: The function 'interpolate' is never used. [unusedFunction]
TransformMatrix interpolate(const TransformMatrix& a, const TransformMatrix& b, double t) {
^
src/obs/obs_integration.cpp:560:0: warning: The function 'apply_transform_generic' is never used. [unusedFunction]
void OBSIntegration::apply_transform_generic(struct obs_source_frame* frame,
^
src/obs_module_exports.c:28:0: warning: The function 'obs_module_name' is never used. [unusedFunction]
MODULE_EXPORT const char *obs_module_name(void)
^
src/obs_module_exports.c:37:0: warning: The function 'obs_module_description' is never used. [unusedFunction]
MODULE_EXPORT const char *obs_module_description(void)
^
src/obs_module_exports.c:46:0: warning: The function 'obs_module_load' is never used. [unusedFunction]
MODULE_EXPORT bool obs_module_load(void)
^
src/obs_module_exports.c:57:0: warning: The function 'obs_module_text' is never used. [unusedFunction]
MODULE_EXPORT const char* obs_module_text(const char* lookup_string)
^
src/obs_module_exports.c:67:0: warning: The function 'obs_module_unload' is never used. [unusedFunction]
MODULE_EXPORT void obs_module_unload(void)
^
src/obs_stubs.c:174:0: warning: The function 'obs_data_get_string' is never used. [unusedFunction]
const char *obs_data_get_string(obs_data_t *data, const char *name) {
^
src/obs_stubs.c:198:0: warning: The function 'obs_data_set_default_string' is never used. [unusedFunction]
void obs_data_set_default_string(obs_data_t *data, const char *name, const char *val) {
^
src/obs_stubs.c:210:0: warning: The function 'obs_properties_destroy' is never used. [unusedFunction]
void obs_properties_destroy(obs_properties_t *props) {
^
src/obs_stubs.c:225:0: warning: The function 'obs_properties_add_int' is never used. [unusedFunction]
obs_property_t *obs_properties_add_int(obs_properties_t *props, const char *name, const char *description, int min, int max, int step) {
^
src/obs_stubs.c:253:0: warning: The function 'obs_properties_create_group' is never used. [unusedFunction]
obs_property_t *obs_properties_create_group(obs_properties_t *props, const char *name, const char *description, enum obs_group_type type) {
^
src/obs_stubs.c:266:0: warning: The function 'obs_property_list_add_string' is never used. [unusedFunction]
size_t obs_property_list_add_string(obs_property_t *prop, const char *name, const char *val) {
^
nofile:0:0: warning: Active checkers: 167/856 (use --checkers-report=<filename> to see details) [checkersReport]

